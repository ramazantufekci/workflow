{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -260,
        -140
      ],
      "id": "a5dca1d8-28fc-4c64-ad3e-d70d5d567240",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "url": "https://www.ramazantufekci.com",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -160,
        40
      ],
      "id": "538ac981-2646-4e6f-b159-9b4e91fefeb3",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst data = $input.first().json.data;\nconst urls = data.match(/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/g);\n  \nreturn urls.map(url=>({\n    json: {url: url}}\n  ));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        -140
      ],
      "id": "5daa7492-b016-4386-98a2-dd5dbf4ddadd",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        240,
        -180
      ],
      "id": "fe3d3073-f99e-40b6-8a96-888c203a60d5",
      "name": "Loop Over Items",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "={{$json.url}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        480,
        20
      ],
      "id": "9863cb5f-7117-472f-a321-33aa8a47dff5",
      "name": "HTTP Request1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "24488939-ba00-4e66-aee6-1309e4b726d9",
              "leftValue": "={{$json.url}}",
              "rightValue": "=(https:\\/\\/ogp\\.me\\/ns#|ramazantufekci\\.com|www\\.w3\\.org|schema\\.org|w\\.org|onesignal\\.com|clarity\\.ms|googletagmanager\\.com|yandex\\.ru|cloudflare\\.com|googlesyndication\\.com|cloudflareinsights\\.com)",
              "operator": {
                "type": "string",
                "operation": "notRegex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        40,
        100
      ],
      "id": "66049a00-7166-4d82-96aa-300d6066f56a",
      "name": "Filter"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        -140
      ],
      "id": "b82fccb8-a6a8-46ca-9b82-c464ae15324c",
      "name": "Code2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        400,
        -240
      ],
      "id": "98da986c-db4e-4077-8760-6ed8ef01f5dd",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 2,
      "position": [
        20,
        -260
      ],
      "id": "34e68e9c-2e6d-43fb-9820-4f943f31b5bb",
      "name": "Remove Duplicates"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d54a28e3-ab89-42aa-8ca7-c8132c624f70",
  "meta": {
    "instanceId": "4ff24a3f3d0274e621ab9f47b0b19d4c30c3f6d67e2cc11aa59ce59625e8a7b9"
  },
  "id": "6DGfg8vmZOjenSFJ",
  "tags": []
}